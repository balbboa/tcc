generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organizations {
  id        Int         @id @default(autoincrement())
  name      String
  users     Users[]
  approachs Approachs[]
}

model Groups {
  id    Int             @id @default(autoincrement())
  name  String
  users GroupsOnUsers[]
}

model Users {
  id             Int             @id @default(autoincrement())
  name           String
  email          String
  password       String
  registration   String
  approachs      Approachs[]
  organizationId Int
  status         Boolean         @default(true)
  createdAt      DateTime        @default(now()) @db.Timestamptz(3)
  updatedAt      DateTime?       @updatedAt @db.Timestamptz(3)
  organizations  Organizations   @relation(fields: [organizationId], references: [id])
  groups         GroupsOnUsers[]
}

model GroupsOnUsers {
  userId    Int
  groupId   Int
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  id        Int      @id @default(autoincrement())
  group     Groups   @relation(fields: [groupId], references: [id])
  user      Users    @relation(fields: [userId], references: [id])
}

model Approachs {
  id              Int           @id @default(autoincrement())
  status          Boolean       @default(false)
  description     String?
  latitude        String?
  longitude       String?
  userId          Int
  street          String?
  district        String?
  number          String?
  city            String?
  state           String?
  users           Users         @relation(fields: [userId], references: [id])
  organizationsId Int
  organizations   Organizations @relation(fields: [organizationsId], references: [id])
  createdAt       DateTime      @default(now()) @db.Timestamptz(3)
  updatedAt       DateTime?     @updatedAt @db.Timestamptz(3)
}
